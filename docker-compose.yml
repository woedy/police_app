version: "3.8"
services:

  # Redis
  api-policeapp-redis_c:
    image: redis:alpine
    container_name: api-policeapp-redis_c

  # Database Postgres
  api-policeapp-db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=police_app_pro
      - POSTGRES_USER=police_app_pro
      - POSTGRES_PASSWORD=police_app_pro
    container_name: api-policeapp-db

  # Django Application
  api-policeapp-app3:
    build: .
    volumes:
      - .:/django3
      - ./static_cdn:/var/lib/static_cdn
    ports:
      - "8282:8282"
    image: app3:django
    container_name: api-policeapp-app3
    command: python manage.py runserver 0.0.0.0:8282
    depends_on:
      - api-policeapp-db

  # Celery Worker
  celery:
    restart: always
    build:
      context: .
    command: celery -A police_app_pro worker -l DEBUG
    volumes:
      - .:/django3
    container_name: api-policeapp-celery_c
    depends_on:
      - api-policeapp-db
      - api-policeapp-redis_c
      - api-policeapp-app3

  # Celery Beat
  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A police_app_pro beat -l DEBUG
    volumes:
      - .:/django3
    container_name: api-policeapp-celery_beat_c
    depends_on:
      - api-policeapp-db
      - api-policeapp-redis_c
      - api-policeapp-app3

volumes:
  static_cdn:

# networks:
#   default:
#     external: true
#     name: docker-nginx-proxy-manager
#